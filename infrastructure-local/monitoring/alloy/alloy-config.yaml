kind: ConfigMap
apiVersion: v1
metadata:
  name: alloy-config
  namespace: monitoring
data:
  config.river: |-
    logging {
        level  = "info"
        format = "logfmt"
      }

      discovery.kubernetes "pods" {
        role = "pod"
      }

      // loki.relabel "default" {
      discovery.relabel "pods" {
         targets = discovery.kubernetes.pods.targets
         // forward_to = [loki.write.local.receiver]

        rule {
          action        = "replace"
          source_labels = ["__meta_kubernetes_namespace"]
          target_label  = "namespace"
        }
  
        rule {
          action        = "replace"
          source_labels = ["__meta_kubernetes_pod_container_name"]
          target_label  = "container"
        }
  
        rule {
          action        = "replace"
          source_labels = ["__meta_kubernetes_pod_controller_name"]
          target_label  = "instance"
        }
  
        rule {
          action        = "replace"
          source_labels = ["__meta_kubernetes_pod_name"]
          target_label  = "pod"
        }
  
        rule {
          action        = "replace"
          source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_component"]
          target_label  = "component"
        }
  
        rule {
          action        = "replace"
          source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_part_of"]
          target_label  = "partof"
        }
      }

      loki.source.kubernetes_events "events" {
        // Only watch for events in the kube-system namespace.
        // namespaces = ["kube-system"]

        forward_to = [loki.write.local.receiver]
      }

      loki.source.kubernetes "pods" {
        targets    = discovery.relabel.pods.output
        forward_to = [loki.write.local.receiver]
        // forward_to = [loki.relabel.default.receiver]
      }

      loki.write "local" {
        endpoint {
          url = "http://loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push"
        }
      }

      